[{"C:\\Trinh\\Coding_Dojo\\08_Coding_Challenge\\2021_08_08_PridePlace\\prideplaces\\src\\index.js":"1","C:\\Trinh\\Coding_Dojo\\08_Coding_Challenge\\2021_08_08_PridePlace\\prideplaces\\src\\reportWebVitals.js":"2","C:\\Trinh\\Coding_Dojo\\08_Coding_Challenge\\2021_08_08_PridePlace\\prideplaces\\src\\App.js":"3","C:\\Trinh\\Coding_Dojo\\08_Coding_Challenge\\2021_08_08_PridePlace\\prideplaces\\src\\components\\Post.jsx":"4"},{"size":500,"mtime":499158900000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499158900000,"results":"7","hashOfConfig":"6"},{"size":2385,"mtime":1617998716253,"results":"8","hashOfConfig":"6"},{"size":2223,"mtime":1617998803437,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1wsfjjx",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Trinh\\Coding_Dojo\\08_Coding_Challenge\\2021_08_08_PridePlace\\prideplaces\\src\\index.js",[],["20","21"],"C:\\Trinh\\Coding_Dojo\\08_Coding_Challenge\\2021_08_08_PridePlace\\prideplaces\\src\\reportWebVitals.js",[],"C:\\Trinh\\Coding_Dojo\\08_Coding_Challenge\\2021_08_08_PridePlace\\prideplaces\\src\\App.js",[],"C:\\Trinh\\Coding_Dojo\\08_Coding_Challenge\\2021_08_08_PridePlace\\prideplaces\\src\\components\\Post.jsx",["22"],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst Post = (props) => {\r\n  const [isOpened, setIsOpened] = useState(false);\r\n  const ref = useRef();\r\n  useOnClickOutside(ref, (isOpened) => setIsOpened(false));\r\n  const { authorName, authorCatchPhrase, postTitle, postBody, postId } = props;\r\n\r\n  function handleClick(postId) {\r\n    setIsOpened(!isOpened);\r\n  }\r\n  return (\r\n    <div\r\n      className=\"post col-lg-10 col-md-8 col-sm-12 text-white shadow mb-2 p-3 rounded\"\r\n      ref={ref}\r\n      onClick={(event) => handleClick(postId)}\r\n    >\r\n      <p\r\n        className={\r\n          isOpened === false ? \"text-center text-capitalize\" : \"text-capitalize\"\r\n        }\r\n      >\r\n        {isOpened === false && postId + \". \"}\r\n        <span className=\"font-weight-bold\">\r\n          {isOpened && \"Post's title:\"}\r\n        </span>{\" \"}\r\n        {postTitle}\r\n      </p>\r\n      {isOpened && (\r\n        <div>\r\n          <p>\r\n            <span className=\"font-weight-bold\">Author's name:</span>{\" \"}\r\n            {authorName}\r\n          </p>\r\n          <p>\r\n            <span className=\"font-weight-bold\">Author's catch phrase:</span>{\" \"}\r\n            {authorCatchPhrase}\r\n          </p>\r\n          <p>\r\n            <span className=\"font-weight-bold\">Post's body: </span>\r\n            {postBody}\r\n          </p>\r\n          <div className=\"text-center\">\r\n            <button\r\n              className=\"btn btn-warning shadow text-white\"\r\n              onClick={(event) => setIsOpened(false)}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n\r\nfunction useOnClickOutside(ref, handler) {\r\n  useEffect(() => {\r\n    const listener = (event) => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", listener);\r\n    document.addEventListener(\"touchstart\", listener);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n      document.removeEventListener(\"touchstart\", listener);\r\n    };\r\n  }, []);\r\n}\r\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":77,"column":6,"nodeType":"29","endLine":77,"endColumn":8,"suggestions":"30"},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handler' and 'ref'. Either include them or remove the dependency array. If 'handler' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["33"],"no-global-assign","no-unsafe-negation",{"desc":"34","fix":"35"},"Update the dependencies array to be: [handler, ref]",{"range":"36","text":"37"},[2214,2216],"[handler, ref]"]